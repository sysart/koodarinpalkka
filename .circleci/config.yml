defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:8.11
version: 2
orbs:
  aws-s3: circleci/aws-s3@1.0.4
jobs:
  checkout_code:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}-
            - source-

      - checkout

      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - "~/repo"
  install:
    <<: *defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: "Yarn install"
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - "node_modules"
  test:
    <<: *defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: "List"
          command: ls -la
      - run:
          name: "Test"
          command: npm run test
  build:
    <<: *defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: "Build app"
          command: npm run build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - build
            - package.json
  deploy:
    <<: *defaults
    environment:
      - STAGING_BUCKET: YOUR_STAGING_BUCKET_NAME
      - PRODUCTION_BUCKET: YOUR_PRODUCTION_BUCKET_NAME
      - STAGING_DISTRIBUTION_ID: YOUR_STAGING_DISTRIBUTION_ID
      - PRODUCTION_DISTRIBUTION_ID: YOUR_PRODUCTION_DISTRIBUTION_ID
    steps:
      - attach_workspace:
          at: ~/repo
      - aws-s3/sync:
        from: dist
        to: "s3://koodarinpalkka.fi"
        arguments: |
          --acl public-read \
          --cache-control "max-age=86400"
        overwrite: true
      # - run: sudo apt-get update && sudo apt-get install -y python-dev
      # - run: sudo curl -O https://bootstrap.pypa.io/get-pip.py
      # - run: sudo python get-pip.py
      # - run: sudo pip install awscli --upgrade
      # - run: aws --version
      # - run: aws s3 ls
      # - run:
      #     name: "Deploy to S3"
      #     command: |
      #       if [ "${CIRCLE_BRANCH}" == "master" ]; then
      #         aws s3 sync build/ s3://${PRODUCTION_BUCKET} --delete
      #         aws cloudfront create-invalidation --distribution-id "${PRODUCTION_DISTRIBUTION_ID}" --paths /index.html
      #       elif [ "${CIRCLE_BRANCH}" == "develop" ]; then
      #         aws s3 sync build/ s3://${STAGING_BUCKET} --delete
      #         aws cloudfront create-invalidation --distribution-id "${STAGING_DISTREBUTION_ID}" --paths /index.html
      #       fi
workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - install:
          requires:
            - checkout_code
      - test:
          requires:
            - install
      - build:
          requires:
            - install
      - deploy:
          requires:
            - test
            - build
